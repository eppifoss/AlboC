Parser:       <program>
Parser:         <type>
Parser:         </type>
Parser:         <func decl>
 1:   int main ()
 2:  {
Parser:           <func-body>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <statm list>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
 3:     int v;   v = getint();
Parser:                                 <expr list>
Parser:                                 </expr list>
 4:  
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <if-statm>
Parser:                   <expression>
Parser:                     <term>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <operand>
Parser:                             <variable>
Parser:                             </variable>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                     </term>
Parser:                     <rel opr>
Parser:                     </rel opr>
Parser:                     <term>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <prefix opr>
Parser:                           </prefix opr>
Parser:                           <operand>
Parser:                             <number>
 5:     if (i < -0)  /* -0 er lov! */
Parser:                             </number>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                     </term>
Parser:                   </expression>
AlboC error in line 5: A leftCurlToken expected, but found a nameToken!
