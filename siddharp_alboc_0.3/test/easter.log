 1:   /* Test program 'easter'
 2:                  ========
 3:     Computes Easter Sunday for the years 2010-2020. 
 4:  */
 5:  
Parser:       <program>
Parser:         <type>
Parser:         </type>
Parser:         <func decl>
Parser:           <type>
Parser:           </type>
Parser:           <param decl>
Parser:           </param decl>
Parser:           <type>
 6:  int mod (int x, int y)
Parser:           </type>
Parser:           <param decl>
Parser:           </param decl>
 7:  { /* Computes x%y */
Parser:           <func-body>
Parser:             <statm list>
Parser:               <statement>
Parser:                 <return-statm>
Parser:                   <expression>
Parser:                     <term>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <operand>
Parser:                             <variable>
Parser:                             </variable>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                       <term opr>
Parser:                       </term opr>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <operand>
Parser:                             <inner expr>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <variable>
Parser:                                         </variable>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                     <factor opr>
Parser:                                     </factor opr>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <variable>
Parser:                                         </variable>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                     <factor opr>
Parser:                                     </factor opr>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <variable>
 8:    return x - (x/y*y);
Parser:                                         </variable>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
 9:  }
Parser:                             </inner expr>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                     </term>
Parser:                   </expression>
 10:  
Parser:                 </return-statm>
Parser:               </statement>
Parser:             </statm list>
Parser:           </func-body>
Parser:         </func decl>
Parser:         <type>
Parser:         </type>
Parser:         <func decl>
Parser:           <type>
 11:  int easter (int y)
Parser:           </type>
Parser:           <param decl>
 12:  {
Parser:           </param decl>
Parser:           <func-body>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
 13:    int a;  int b;  int c;  int d;  int e;  int f;
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
Parser:             </var decl>
Parser:             <type>
 14:    int g;  int h;  int i;  int k;  int l;  int m;
Parser:             </type>
Parser:             <var decl>
 15:  
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
 16:    int month;  /* The date of Easter Sunday */
Parser:             </var decl>
Parser:             <type>
Parser:             </type>
Parser:             <var decl>
 17:    int m_name[5];
Parser:             </var decl>
Parser:             <type>
 18:    int day;
Parser:             </type>
Parser:             <var decl>
 19:  
Parser:             </var decl>
Parser:             <type>
 20:    int ix;
Parser:             </type>
Parser:             <var decl>
 21:  
Parser:             </var decl>
Parser:             <statm list>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 22:    a = mod(y,19);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <variable>
Parser:                               </variable>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 23:    b = y / 100;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 24:    c = mod(y,100);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <variable>
Parser:                               </variable>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 25:    d = b / 4;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 26:    e = mod(b,4);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <inner expr>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </inner expr>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 27:    f = (b+8) / 25;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <inner expr>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </inner expr>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 28:    g = (b-f+1) / 3;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                         <factor opr>
Parser:                                         </factor opr>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 29:    h = mod(19*a+b-d-g+15,30);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <variable>
Parser:                               </variable>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 30:    i = c / 4;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 31:    k = mod(c,4);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                         <factor opr>
Parser:                                         </factor opr>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                         <factor opr>
Parser:                                         </factor opr>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
 32:    l = mod(32+2*e+2*i-h-k,7);
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <inner expr>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                       <factor opr>
Parser:                                       </factor opr>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                       <factor opr>
Parser:                                       </factor opr>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </inner expr>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 33:    m = (a+11*h+22*l) / 451;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
 34:  
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <inner expr>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <variable>
Parser:                                           </variable>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <inner expr>
Parser:                                             <expression>
Parser:                                               <term>
Parser:                                                 <factor>
Parser:                                                   <primary>
Parser:                                                     <operand>
Parser:                                                       <number>
Parser:                                                       </number>
Parser:                                                     </operand>
Parser:                                                   </primary>
Parser:                                                   <factor opr>
Parser:                                                   </factor opr>
Parser:                                                   <primary>
Parser:                                                     <operand>
Parser:                                                       <variable>
Parser:                                                       </variable>
Parser:                                                     </operand>
Parser:                                                   </primary>
Parser:                                                 </factor>
Parser:                                               </term>
Parser:                                             </expression>
Parser:                                           </inner expr>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                     <term opr>
Parser:                                     </term opr>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </inner expr>
Parser:                             </operand>
Parser:                           </primary>
Parser:                           <factor opr>
 35:    month = (h+l-(7*m)+114) / 31;
Parser:                           </factor opr>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <assign-statm>
Parser:                   <assignment>
Parser:                     <lhs-variable>
Parser:                       <variable>
Parser:                       </variable>
Parser:                     </lhs-variable>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <function call>
Parser:                                 <expr list>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <variable>
Parser:                                             </variable>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <inner expr>
Parser:                                               <expression>
Parser:                                                 <term>
Parser:                                                   <factor>
Parser:                                                     <primary>
Parser:                                                       <operand>
Parser:                                                         <number>
Parser:                                                         </number>
Parser:                                                       </operand>
Parser:                                                     </primary>
Parser:                                                     <factor opr>
Parser:                                                     </factor opr>
Parser:                                                     <primary>
Parser:                                                       <operand>
Parser:                                                         <variable>
Parser:                                                         </variable>
Parser:                                                       </operand>
Parser:                                                     </primary>
Parser:                                                   </factor>
Parser:                                                 </term>
Parser:                                               </expression>
Parser:                                             </inner expr>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                       <term opr>
Parser:                                       </term opr>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                   <expression>
Parser:                                     <term>
Parser:                                       <factor>
Parser:                                         <primary>
Parser:                                           <operand>
Parser:                                             <number>
Parser:                                             </number>
Parser:                                           </operand>
Parser:                                         </primary>
Parser:                                       </factor>
Parser:                                     </term>
Parser:                                   </expression>
Parser:                                 </expr list>
Parser:                               </function call>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                         <term opr>
 36:    day = mod(h+l-(7*m)+114,31) + 1;
Parser:                         </term opr>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                   </assignment>
Parser:                 </assign-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <if-statm>
Parser:                   <expression>
Parser:                     <term>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <operand>
Parser:                             <variable>
Parser:                             </variable>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                     </term>
Parser:                     <rel opr>
Parser:                     </rel opr>
Parser:                     <term>
Parser:                       <factor>
Parser:                         <primary>
Parser:                           <operand>
Parser:                             <number>
 37:    if (month == 3) {
Parser:                             </number>
Parser:                           </operand>
Parser:                         </primary>
Parser:                       </factor>
Parser:                     </term>
Parser:                   </expression>
Parser:                   <statm list>
Parser:                     <statement>
Parser:                       <assign-statm>
Parser:                         <assignment>
Parser:                           <lhs-variable>
Parser:                             <variable>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <number>
Parser:                                         </number>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
Parser:                             </variable>
Parser:                           </lhs-variable>
Parser:                           <expression>
Parser:                             <term>
Parser:                               <factor>
Parser:                                 <primary>
Parser:                                   <operand>
Parser:                                     <number>
Parser:                                     </number>
Parser:                                   </operand>
Parser:                                 </primary>
Parser:                               </factor>
Parser:                             </term>
Parser:                           </expression>
Parser:                         </assignment>
Parser:                       </assign-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <assign-statm>
Parser:                         <assignment>
Parser:                           <lhs-variable>
Parser:                             <variable>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <number>
Parser:                                         </number>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
Parser:                             </variable>
Parser:                           </lhs-variable>
Parser:                           <expression>
Parser:                             <term>
Parser:                               <factor>
Parser:                                 <primary>
Parser:                                   <operand>
Parser:                                     <number>
Parser:                                     </number>
Parser:                                   </operand>
Parser:                                 </primary>
Parser:                               </factor>
Parser:                             </term>
Parser:                           </expression>
Parser:                         </assignment>
Parser:                       </assign-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <assign-statm>
Parser:                         <assignment>
Parser:                           <lhs-variable>
Parser:                             <variable>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <number>
Parser:                                         </number>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
Parser:                             </variable>
Parser:                           </lhs-variable>
 38:      m_name[0] = 'M';  m_name[1] = 'a';  m_name[2] = 'r';
Parser:                           <expression>
Parser:                             <term>
Parser:                               <factor>
Parser:                                 <primary>
Parser:                                   <operand>
Parser:                                     <number>
Parser:                                     </number>
Parser:                                   </operand>
Parser:                                 </primary>
Parser:                               </factor>
Parser:                             </term>
Parser:                           </expression>
Parser:                         </assignment>
Parser:                       </assign-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <assign-statm>
Parser:                         <assignment>
Parser:                           <lhs-variable>
Parser:                             <variable>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <number>
Parser:                                         </number>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
Parser:                             </variable>
Parser:                           </lhs-variable>
Parser:                           <expression>
Parser:                             <term>
Parser:                               <factor>
Parser:                                 <primary>
Parser:                                   <operand>
Parser:                                     <number>
Parser:                                     </number>
Parser:                                   </operand>
Parser:                                 </primary>
Parser:                               </factor>
Parser:                             </term>
Parser:                           </expression>
Parser:                         </assignment>
Parser:                       </assign-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <assign-statm>
Parser:                         <assignment>
Parser:                           <lhs-variable>
Parser:                             <variable>
Parser:                               <expression>
Parser:                                 <term>
Parser:                                   <factor>
Parser:                                     <primary>
Parser:                                       <operand>
Parser:                                         <number>
Parser:                                         </number>
Parser:                                       </operand>
Parser:                                     </primary>
Parser:                                   </factor>
Parser:                                 </term>
Parser:                               </expression>
Parser:                             </variable>
Parser:                           </lhs-variable>
 39:      m_name[3] = 'c';  m_name[4] = 'h';
Parser:                           <expression>
Parser:                             <term>
Parser:                               <factor>
Parser:                                 <primary>
Parser:                                   <operand>
Parser:                                     <number>
Parser:                                     </number>
Parser:                                   </operand>
Parser:                                 </primary>
Parser:                               </factor>
Parser:                             </term>
Parser:                           </expression>
Parser:                         </assignment>
Parser:                       </assign-statm>
Parser:                     </statement>
Parser:                   </statm list>
 40:    } else {
Parser:                   <else-part>
Parser:                     <statm list>
Parser:                       <statement>
Parser:                         <assign-statm>
Parser:                           <assignment>
Parser:                             <lhs-variable>
Parser:                               <variable>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </variable>
Parser:                             </lhs-variable>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </assignment>
Parser:                         </assign-statm>
Parser:                       </statement>
Parser:                       <statement>
Parser:                         <assign-statm>
Parser:                           <assignment>
Parser:                             <lhs-variable>
Parser:                               <variable>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </variable>
Parser:                             </lhs-variable>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </assignment>
Parser:                         </assign-statm>
Parser:                       </statement>
Parser:                       <statement>
Parser:                         <assign-statm>
Parser:                           <assignment>
Parser:                             <lhs-variable>
Parser:                               <variable>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </variable>
Parser:                             </lhs-variable>
 41:      m_name[0] = 'A';  m_name[1] = 'p';  m_name[2] = 'r';
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </assignment>
Parser:                         </assign-statm>
Parser:                       </statement>
Parser:                       <statement>
Parser:                         <assign-statm>
Parser:                           <assignment>
Parser:                             <lhs-variable>
Parser:                               <variable>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </variable>
Parser:                             </lhs-variable>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </assignment>
Parser:                         </assign-statm>
Parser:                       </statement>
Parser:                       <statement>
Parser:                         <assign-statm>
Parser:                           <assignment>
Parser:                             <lhs-variable>
Parser:                               <variable>
Parser:                                 <expression>
Parser:                                   <term>
Parser:                                     <factor>
Parser:                                       <primary>
Parser:                                         <operand>
Parser:                                           <number>
Parser:                                           </number>
Parser:                                         </operand>
Parser:                                       </primary>
Parser:                                     </factor>
Parser:                                   </term>
Parser:                                 </expression>
Parser:                               </variable>
Parser:                             </lhs-variable>
 42:      m_name[3] = 'i';  m_name[4] = 'l';
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
 43:    }
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </assignment>
 44:  
 45:    /* Print the answer: */
Parser:                         </assign-statm>
Parser:                       </statement>
Parser:                     </statm list>
Parser:                   </else-part>
Parser:                 </if-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <call-statm>
Parser:                   <function call>
Parser:                     <expr list>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <variable>
Parser:                                 </variable>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </expr list>
Parser:                   </function call>
Parser:                 </call-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <call-statm>
Parser:                   <function call>
Parser:                     <expr list>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <number>
 46:    putint(day);  putchar(' ');
Parser:                                 </number>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </expr list>
Parser:                   </function call>
Parser:                 </call-statm>
Parser:               </statement>
Parser:               <statement>
Parser:                 <for-statm>
Parser:                   <for-control>
Parser:                     <assignment>
Parser:                       <lhs-variable>
Parser:                         <variable>
Parser:                         </variable>
Parser:                       </lhs-variable>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <number>
Parser:                                 </number>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </assignment>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <variable>
Parser:                               </variable>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                       <rel opr>
Parser:                       </rel opr>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                     <assignment>
Parser:                       <lhs-variable>
Parser:                         <variable>
Parser:                         </variable>
Parser:                       </lhs-variable>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <variable>
Parser:                                 </variable>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                           <term opr>
Parser:                           </term opr>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <number>
Parser:                                 </number>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </assignment>
Parser:                   </for-control>
Parser:                   <statm list>
Parser:                     <statement>
Parser:                       <call-statm>
Parser:                         <function call>
Parser:                           <expr list>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <variable>
Parser:                                         <expression>
Parser:                                           <term>
Parser:                                             <factor>
Parser:                                               <primary>
Parser:                                                 <operand>
Parser:                                                   <variable>
Parser:                                                   </variable>
Parser:                                                 </operand>
Parser:                                               </primary>
Parser:                                             </factor>
Parser:                                           </term>
Parser:                                         </expression>
Parser:                                       </variable>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </expr list>
 47:    for (ix = 0;  ix < 5;  ix = ix+1) { putchar(m_name[ix]); }
Parser:                         </function call>
 48:  }
Parser:                       </call-statm>
Parser:                     </statement>
Parser:                   </statm list>
 49:  
Parser:                 </for-statm>
Parser:               </statement>
Parser:             </statm list>
Parser:           </func-body>
Parser:         </func decl>
Parser:         <type>
Parser:         </type>
Parser:         <func decl>
 50:  int main () 
 51:  {
Parser:           <func-body>
Parser:             <type>
 52:    int y;
Parser:             </type>
Parser:             <var decl>
 53:  
Parser:             </var decl>
Parser:             <statm list>
Parser:               <statement>
Parser:                 <for-statm>
Parser:                   <for-control>
Parser:                     <assignment>
Parser:                       <lhs-variable>
Parser:                         <variable>
Parser:                         </variable>
Parser:                       </lhs-variable>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <number>
Parser:                                 </number>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </assignment>
Parser:                     <expression>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <variable>
Parser:                               </variable>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                       <rel opr>
Parser:                       </rel opr>
Parser:                       <term>
Parser:                         <factor>
Parser:                           <primary>
Parser:                             <operand>
Parser:                               <number>
Parser:                               </number>
Parser:                             </operand>
Parser:                           </primary>
Parser:                         </factor>
Parser:                       </term>
Parser:                     </expression>
Parser:                     <assignment>
Parser:                       <lhs-variable>
Parser:                         <variable>
Parser:                         </variable>
Parser:                       </lhs-variable>
Parser:                       <expression>
Parser:                         <term>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <variable>
Parser:                                 </variable>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                           <term opr>
Parser:                           </term opr>
Parser:                           <factor>
Parser:                             <primary>
Parser:                               <operand>
Parser:                                 <number>
 54:    for (y = 2010;  y <= 2020;  y = y+1) {
Parser:                                 </number>
Parser:                               </operand>
Parser:                             </primary>
Parser:                           </factor>
Parser:                         </term>
Parser:                       </expression>
Parser:                     </assignment>
Parser:                   </for-control>
Parser:                   <statm list>
Parser:                     <statement>
Parser:                       <call-statm>
Parser:                         <function call>
Parser:                           <expr list>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <variable>
Parser:                                       </variable>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </expr list>
Parser:                         </function call>
Parser:                       </call-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <call-statm>
Parser:                         <function call>
Parser:                           <expr list>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
 55:      easter(y);  putchar(' ');
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </expr list>
Parser:                         </function call>
Parser:                       </call-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <call-statm>
Parser:                         <function call>
Parser:                           <expr list>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <variable>
Parser:                                       </variable>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </expr list>
Parser:                         </function call>
Parser:                       </call-statm>
Parser:                     </statement>
Parser:                     <statement>
Parser:                       <call-statm>
Parser:                         <function call>
Parser:                           <expr list>
Parser:                             <expression>
Parser:                               <term>
Parser:                                 <factor>
Parser:                                   <primary>
Parser:                                     <operand>
Parser:                                       <number>
 56:      putint(y);  putchar(10);
Parser:                                       </number>
Parser:                                     </operand>
Parser:                                   </primary>
Parser:                                 </factor>
Parser:                               </term>
Parser:                             </expression>
Parser:                           </expr list>
Parser:                         </function call>
 57:    }   
 58:  }
Parser:                       </call-statm>
Parser:                     </statement>
Parser:                   </statm list>
Parser:                 </for-statm>
Parser:               </statement>
Parser:             </statm list>
Parser:           </func-body>
Parser:         </func decl>
Parser:       </program>
Tree:     int mod(int x, int y) {
Tree:       return x - (x / y * );
Tree:     }
Tree:     int easter(int y) {
Tree:       int a;
Tree:       int b;
Tree:       int c;
Tree:       int d;
Tree:       int e;
Tree:       int f;
Tree:       int g;
Tree:       int h;
Tree:       int i;
Tree:       int k;
Tree:       int l;
Tree:       int m;
Tree:       int month;
Tree:       int m_name[5];
Tree:       int day;
Tree:       int ix;
Tree:       a = mod(y, 19);
Tree:       b = y / 100;
Tree:       c = mod(y, 100);
Tree:       d = b / 4;
Tree:       e = mod(b, 4);
Tree:       f = (b + 8) / 25;
Tree:       g = (b - 1 + ) / 3;
